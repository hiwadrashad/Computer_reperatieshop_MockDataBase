@model Computer_Reparatieshop_Mockdatabase.ViewModels.DoneViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style>

        html, body {
            height: 100%;
        }

        html {
            display: table;
            margin: auto;
        }

        body {
            background-image: url("../../Images/clearbackground.jpg");
            display: table-cell;
            vertical-align: middle;
            background-repeat: no-repeat;
            background-size: cover;
            background-position: 50%;
            color: dodgerblue;
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            text-align: center;
        }

        #button {
            border-radius: 25px;
            border: none;
            color: white;
            background-color: aqua;
        }
    </style>
</head>
<body id="login-div">
    <div id="login-div">
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.basemodel.Klant, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.basemodel.Klant, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.basemodel.Klant, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.basemodel.Omschrijving, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.basemodel.Omschrijving, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.basemodel.Omschrijving, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.basemodel.PrijsArbeid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.basemodel.PrijsArbeid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.basemodel.PrijsArbeid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.basemodel.PrijsProducten, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.basemodel.PrijsProducten, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.basemodel.PrijsProducten, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.basemodel.Reparateur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.basemodel.Reparateur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.basemodel.Reparateur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.basemodel.Totaal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.basemodel.Totaal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.basemodel.Totaal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.onderdelen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.onderdelen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.onderdelen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input  id="button" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
        </div>
</body>
</html>
