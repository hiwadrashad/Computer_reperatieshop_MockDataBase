@model Computer_Reparatieshop_Mockdatabase.ViewModel.ChangeDataOpdrachtViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <style>

        html, body {
            height: 100%;
        }

        html {
            display: table;
            margin: auto;
        }

        body {
            background-image: url("../../Images/clearbackground.jpg");
            display: table-cell;
            vertical-align: middle;
            background-repeat: no-repeat;
            background-size: cover;
            background-position: 50%;
            color: dodgerblue;
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            text-align: center;
            font-size: large;
        }
        #button {
            border-radius: 25px;
            border: none;
            color: white;
            background-color: aqua;
            height: 50px;
            font-weight: bolder;
            width: 250px;
            margin: 10px 40px 10px 40px;
            font-size: large;
        }
    </style>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ModelReparatie.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.StartDatum)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelReparatie.StartDatum)<br />
                @Html.ValidationMessageFor(model => model.ModelReparatie.StartDatum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.EindDatum)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelReparatie.EindDatum)<br />
                @Html.ValidationMessageFor(model => model.ModelReparatie.EindDatum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.Omschrijving)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelReparatie.Omschrijving)<br />
                @Html.ValidationMessageFor(model => model.ModelReparatie.Omschrijving)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.PrijsArbeid)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelReparatie.PrijsArbeid)<br />
                @Html.ValidationMessageFor(model => model.ModelReparatie.PrijsArbeid)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.PrijsProducten)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelReparatie.PrijsProducten)<br />
                @Html.ValidationMessageFor(model => model.ModelReparatie.PrijsProducten)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.Totaal)
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelReparatie.Totaal)<br />
                @Html.ValidationMessageFor(model => model.ModelReparatie.Totaal)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.Klant)
            <div class="col-md-10">
                @Html.DropDownListFor(n => n.StoreChoiceKlantFromDropDownList, (List<SelectListItem>)Model.GenerateDropDownDataFromClients)
                @Html.ValidationMessageFor(model => model.ModelReparatie.Klant)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelReparatie.Reparateur)
            <div class="col-md-10">
                @Html.DropDownListFor(n => n.StoreChoiceReperateurFromDropDownList, (List<SelectListItem>)Model.GenerateDropDownDataFromWerknemer)
                @Html.ValidationMessageFor(model => model.ModelReparatie.Reparateur)
            </div>
        </div>


      <div class="form-group">
         @Html.LabelFor(model => model.ModelReparatie.onderdelen)
         <div class="col-md-10">
             @Html.ListBoxFor(n => n.StoreChoicesOnderdelen, (List<SelectListItem>)Model.GenerateDropDownDataFromPart)
             @Html.ValidationMessageFor(model => model.ModelReparatie.onderdelen)
         </div>
     </div>
   
      

        <div class="form-group">
            @Html.LabelFor(model => Model.ModelReparatie.status)
            <div class="col-md-offset-2 col-md-10">
                @Html.DropDownListFor(n => n.ModelReparatie.status, new List<SelectListItem>
           {
           new SelectListItem { Text = "in afwachting", Value = "in afwachting"},
           new SelectListItem { Text = "wachten op onderdelen", Value = "wachten op onderdelen"},
           new SelectListItem { Text = "in behandeling", Value = "in behandeling"},
           new SelectListItem { Text = "klaar", Value = "klaar"}
           }
           )
                @Html.ValidationMessageFor(model => Model.ModelReparatie.status)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="button" type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <button id="button" onclick="history.go(-1);">Go Back</button>
</body>
</html>
