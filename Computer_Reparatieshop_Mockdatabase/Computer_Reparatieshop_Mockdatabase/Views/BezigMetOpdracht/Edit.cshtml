@model Computer_Reparatieshop_Mockdatabase.Models.ModelReparatie

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <style>

        html, body {
            height: 100%;
        }

        html {
            display: table;
            margin: auto;
        }

        body {
            background-image: url("../../Images/clearbackground.jpg");
            display: table-cell;
            vertical-align: middle;
            background-repeat: no-repeat;
            background-size: cover;
            background-position: 50%;
            color: dodgerblue;
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            text-align: center;
            font-size: large;
        }

        #button {
            border-radius: 25px;
            border: none;
            color: white;
            background-color: aqua;
            height: 40px;
            font-weight: bolder;
            width: 200px;
            margin: 10px 0 0 0;
        }
    </style>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4></h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.StartDatum)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDatum)<br />
                    @Html.ValidationMessageFor(model => model.StartDatum)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EindDatum)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EindDatum)<br />
                    @Html.ValidationMessageFor(model => model.EindDatum)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.status)
                <div class="col-md-offset-2 col-md-10">
                    @Html.DropDownListFor(n => n.status.Text, new List<SelectListItem>
               {
               new SelectListItem { Text = "in afwachting", Value = "in afwachting"},
               new SelectListItem { Text = "wachten op onderdelen", Value = "wachten op onderdelen"},
               new SelectListItem { Text = "in behandeling", Value = "in behandeling"},
               new SelectListItem { Text = "klaar", Value = "klaar"}
               }
               )
                    @Html.ValidationMessageFor(model => Model.status)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="button" type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <button id="button" value="Terug" onclick="location.href='@Url.Action("Index")'">
        Terug
    </button>
</body>
</html>
